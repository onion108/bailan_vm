#include <iostream>
#include <vector>
#include <stack>
#include <map>
#include <stdexcept>
#include "vm.hh"

using std::cin;
using std::cout;
using std::endl;

int main() {
    vm_t computer;
    computer.write_to(std::vector<unsigned char> {
        0x04, 0x01,                               // intr 0x01
        0x03, 0x00,                               // mov_ans r0
        0x04, 0x01,                               // intr 0x01
        0x03, 0x01,                               // mov_ans r1
        0x08, 0x00, 0x01,                         // add r0, r1
        0x03, 0x00,                               // mov_ans r0
        0x04, 0x00,                               // intr 0x00
        0x12, 0x00, 0x00, 0x7c, 0x05              // jmp 0x7c05
    }, 0x0000);
    computer.write_to(std::vector<unsigned char> {
        0x12, 0x00, 0x00, 0x00, 0x00,             // jmp 0x00000000
        0x01, 0x00, 0x00, 0x00, 0x00, 0x05,       // mov 0x00, r5 ;Use r5 as a counter
        0x01, 0x00, 0x00, 0x00, 0x05, 0x06,       // mov 0x05, r6 ;Loop 6 times
        0x01, 0x00, 0x00, 0x00, 0x0A, 0x00,       // mov 0x0A, r0
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x48, 0x00,       // mov 0x48, r0 ;'H'
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x65, 0x00,       // mov 0x65, r0 ;'e'
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x6C, 0x00,       // mov 0x6C, r0 ;'l'
        0x04, 0x02,                               // intr 0x02
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x6F, 0x00,       // mov 0x6F, r0 ;'o'
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x2C, 0x00,       // mov 0x2C, r0 ;','
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x20, 0x00,       // mov 0x20, r0 ;' '
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x77, 0x00,       // mov 0x77, r0 ;'w'
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x6F, 0x00,       // mov 0x6F, r0 ;'o'
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x72, 0x00,       // mov 0x72, r0 ;'r'
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x6C, 0x00,       // mov 0x6C, r0 ;'l'
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x64, 0x00,       // mov 0x64, r0 ;'d'
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x21, 0x00,       // mov 0x21, r0 ;'!'
        0x04, 0x02,                               // intr 0x02
        0x01, 0x00, 0x00, 0x00, 0x0A, 0x00,       // mov 0x0A, r0 ;'\n'
        0x04, 0x02,                               // intr 0x02
        0x18, 0x05, 0x06, 0x03,                   // cmp r5, r6, 0x03
        0x01, 0x00, 0x00, 0x00, 0x01, 0x07,       // mov 0x01, r7
        0x08, 0x05, 0x07,                         // add r5, r7
        0x03, 0x05,                               // mov_ans r5
        0x16, 0x00, 0x00, 0x7c, 0x0B,             // jmp_cond 0x7c0b
        0x17,                                     // stop
    }, 0x7c00);
    computer.boot();
}

